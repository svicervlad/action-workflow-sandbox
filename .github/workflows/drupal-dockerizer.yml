name: Check DD

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Cache Composer dependencies
      uses: actions/cache@v2
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

    - name: Get Drupal Project
      uses: actions/checkout@v2
      with:
        repository: 'drupal/recommended-project'
        path: './'

    - name: Add HTTP basic auth credentials
      run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

    - name: Install drupal
      uses: php-actions/composer@v5
      with:
        command: install --ignore-platform-reqs

    - name: update drupal
      uses: php-actions/composer@v5
      with:
        command: update --ignore-platform-reqs

    - name: Get DD
      uses: actions/checkout@v2
      with:
        repository: 'jet-dev-team/drupal-dockerizer'
        path: '.drupal-dockerizer'

    - name: Create config.yml
      run: |
        echo "---" > config.yml
        echo "" >> config.yml
        echo "compose_project_name: drupal-project" >> config.yml
        echo "user_uid: 1001" >> config.yml
        echo "user_gid: 121" >> config.yml
        echo "drupal_root_dir: $GITHUB_WORKSPACE" >> config.yml

    - name: Cache docker images.
      uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true

    - name: Setup containers
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: main.yml
        directory: .drupal-dockerizer
        options: |
          --verbose

    - name: Run drush commands
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: drush-commands.yml
        directory: .drupal-dockerizer
        options: |
          --verbose

    - name: Check drupal
      run: curl http://localhost | grep "Drupal"
